{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/category/create": {
            "post": {
                "description": "Create a new category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Create a category",
                "parameters": [
                    {
                        "description": "Category object",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category created successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/category/list": {
            "get": {
                "description": "Get a list of categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "List categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Category"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/category/{id}": {
            "get": {
                "description": "Get a category by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get a category by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/item/create": {
            "post": {
                "description": "Create a new item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Create an item",
                "parameters": [
                    {
                        "description": "Item object",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Item"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item created successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/item/list": {
            "get": {
                "description": "Get a list of items",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "List items",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Item"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/item/{id}": {
            "get": {
                "description": "Get an item by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Get an item by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an item by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Delete an item by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/promotion/create": {
            "post": {
                "description": "Create a new promotion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Promotion"
                ],
                "summary": "Create a promotion",
                "parameters": [
                    {
                        "description": "Promotion object",
                        "name": "promotion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Promotion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Promotion created successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/promotion/list": {
            "get": {
                "description": "Get a list of promotions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Promotion"
                ],
                "summary": "List promotions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Promotion"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/promotion/{id}": {
            "get": {
                "description": "Get a promotion by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Promotion"
                ],
                "summary": "Get a promotion by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Promotion ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Category": {
            "type": "object",
            "required": [
                "itemType",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "itemType": {
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.CategoryPromotionDiscount": {
            "type": "object",
            "required": [
                "categoryID",
                "discountRate"
            ],
            "properties": {
                "categoryID": {
                    "type": "integer"
                },
                "discountRate": {
                    "type": "number",
                    "maximum": 100,
                    "minimum": 0
                }
            }
        },
        "entity.Item": {
            "type": "object",
            "required": [
                "cartId",
                "categoryId",
                "price",
                "quantity",
                "sellerId"
            ],
            "properties": {
                "cartId": {
                    "type": "integer"
                },
                "categoryId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "itemType": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer",
                    "maximum": 10
                },
                "sellerId": {
                    "type": "integer"
                }
            }
        },
        "entity.Promotion": {
            "type": "object",
            "required": [
                "promotionType"
            ],
            "properties": {
                "categoryPromotion": {
                    "$ref": "#/definitions/entity.CategoryPromotionDiscount"
                },
                "id": {
                    "type": "integer"
                },
                "promotionType": {
                    "enum": [
                        1,
                        2,
                        3
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/entity.PromotionType"
                        }
                    ]
                },
                "sameSellerPromotion": {
                    "$ref": "#/definitions/entity.SameSellerPromotionDiscount"
                },
                "totalPricePromotions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.TotalPricePromotionDiscount"
                    }
                }
            }
        },
        "entity.PromotionType": {
            "type": "integer",
            "enum": [
                1,
                2,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "DigitalItem",
                "DefaultItem",
                "SameSellerPromotion",
                "CategoryPromotion",
                "TotalPricePromotion"
            ]
        },
        "entity.SameSellerPromotionDiscount": {
            "type": "object",
            "required": [
                "discountRate"
            ],
            "properties": {
                "discountRate": {
                    "type": "number",
                    "maximum": 100,
                    "minimum": 0
                }
            }
        },
        "entity.TotalPricePromotionDiscount": {
            "type": "object",
            "required": [
                "discountAmount",
                "priceRangeEnd",
                "priceRangeStart"
            ],
            "properties": {
                "discountAmount": {
                    "type": "number"
                },
                "priceRangeEnd": {
                    "type": "number"
                },
                "priceRangeStart": {
                    "type": "number"
                }
            }
        }
    }
}
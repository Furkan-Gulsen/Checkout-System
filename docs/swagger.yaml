definitions:
  entity.Category:
    properties:
      id:
        type: integer
      itemType:
        enum:
        - 1
        - 2
        type: integer
      name:
        type: string
    required:
    - itemType
    - name
    type: object
  entity.Item:
    properties:
      categoryId:
        type: integer
      id:
        type: integer
      itemType:
        type: integer
      price:
        type: number
      quantity:
        maximum: 10
        type: integer
      sellerId:
        type: integer
    required:
    - categoryId
    - price
    - quantity
    - sellerId
    type: object
info:
  contact: {}
paths:
  /api/v1/category/{id}:
    get:
      description: Get a category by ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get a category by ID
      tags:
      - Category
  /api/v1/category/create:
    post:
      consumes:
      - application/json
      description: Create a new category
      parameters:
      - description: Category object
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/entity.Category'
      produces:
      - application/json
      responses:
        "200":
          description: Category created successfully
          schema:
            type: string
      summary: Create a category
      tags:
      - Category
  /api/v1/category/list:
    get:
      description: Get a list of categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Category'
            type: array
      summary: List categories
      tags:
      - Category
  /api/v1/item/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an item by its ID
      parameters:
      - description: Item ID
        format: int
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Delete an item by ID
      tags:
      - Item
    get:
      consumes:
      - application/json
      description: Get an item by its ID
      parameters:
      - description: Item ID
        format: int
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get an item by ID
      tags:
      - Item
  /api/v1/item/create:
    post:
      consumes:
      - application/json
      description: Create a new item
      parameters:
      - description: Item object
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/entity.Item'
      produces:
      - application/json
      responses:
        "200":
          description: Item created successfully
          schema:
            type: string
      summary: Create an item
      tags:
      - Item
  /api/v1/item/list:
    get:
      description: Get a list of items
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Item'
            type: array
      summary: List items
      tags:
      - Item
swagger: "2.0"
